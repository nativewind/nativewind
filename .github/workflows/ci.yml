name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # To ensure that the commitlint merge_group event triggers correctly, you need to have at least one workflow that responds to the pull_request event with a job named the same as the one in your merge_group workflow (commitlint in this example). This is necessary because the merge queue relies on the existence of status checks from the pull request context.
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint files
        run: yarn lint

      - name: Typecheck files
        run: yarn typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: yarn test --maxWorkers=2 --coverage

  build-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn build

      - name: Check for unstaged files
        uses: ./.github/actions/check-unstaged-files

  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn build

      - name: Build example for Web
        run: |
          yarn example expo export --platform web

      - name: Check for unstaged files
        uses: ./.github/actions/check-unstaged-files
